version: "3.8"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    restart: always
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "openweather:1:1"

  elasticsearch:
    cap_add:
      - IPC_LOCK
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    image: "docker.elastic.co/elasticsearch/elasticsearch:8.12.2"
    ports:
      - "9200:9200"
    restart: always
    ulimits:
      memlock:
        hard: -1
        soft: -1
      nofile:
        hard: 65536
        soft: 65536
    volumes:
      - "elasticsearch-data:/usr/share/elasticsearch/data"

  kibana:
    depends_on:
      - elasticsearch
    environment:
      - "ELASTICSEARCH_HOSTS=http://elasticsearch:9200"
    image: "docker.elastic.co/kibana/kibana:8.12.2"
    ports:
      - "5601:5601"
    restart: always
    mem_limit: 1g

  openweather_producer:
    build:
      context: producer
      dockerfile: Dockerfile
    restart: always
    environment:
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY:?}
    depends_on:
      - kafka

  logstash:
    restart: always
    depends_on:
      - elasticsearch
      - kafka
    image: "docker.elastic.co/logstash/logstash:8.12.2"
    volumes:
      - ./conf/pipeline.conf:/pipeline.conf:ro
    command: logstash -f /pipeline.conf

volumes:
  elasticsearch-data:
